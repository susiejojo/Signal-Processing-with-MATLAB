function y = overlapadd(h,x,N)

% If N is not already a power of 2, replace it with the next power of 2
N = 2^(nextpow2(N));

% Compute important lengths
M = length(h);
L = N-M+1;
Lx = length(x);

% Length-N DFT of filter

H = fft(h,N);

% Initialize y (include some extra zeros at end)
y = zeros(1,Lx+N);

% Pad x with zeros to be a multiple of L
x = [x,zeros(1,L-mod(lx,L)];

% How many blocks will we have?
K = length(x)/L;

% Loop over blocks
for i=1:K
    
    % Extract length-L block from x 
    block = x(1:N);
    
    % Take length-N FFT of this block
    B = fft(block,N);
    
    % Compute product in frequency domain and take inverse DFT
    yblock = ...
    
    % If first block, initialize y
    if i==1
        y(1:N) = yblock;
    else  % Add the result to the appropriate location in y
        y(...) = y(...) + yblock;
    end
    
end

% Trim extra zeros from the end of y to get the correct length convolution

y = y(...);